// # English (Phonemic) keyboard layout
// Copyright (c) 2024 Neil Raiden (AGPL v.3)
//
// ### notes:
//
// ## Unshifted:
// ```
// ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬──────┐
// │ ` │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │ bksp │
// ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬────┤
// │ tab │ɔɪ │ w │ ɛ │ r │ t │ ɑ │ ʌ │ ɪ │ ɒ │ p │ [ │ ] │ \  │
// ├─────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
// │ CapsL │ ə │ s │ d │ f │ g │ h │ j │ k │ l │ ; │ ' │  ent │
// ├───────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴──────┤
// │  shift  │ z │ɜːr│tʃ │ v │ b │ n │ m │ , │ . │ / │  shift │
// ├──────┬──┴──┬┴───┴─┬─┴───┴───┴───┴───┴───┴─┬─┴───┴┬───────┤
// │ ctrl │ win │ Lalt │         space         │ Ralt │  ctrl │
// └──────┴─────┴──────┴───────────────────────┴──────┴───────┘
// ```
// ## Shifted:
// ```
// ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬──────┐
// │ ` │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │ bksp │
// ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬────┤
// │ tab │aʊ │ɪə │eɪ │ɑːr│ θ │ ɔ │ ʊ │ i │əʊ │ɔːr│ ⟨ │ ⟩ │ |  │
// ├─────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
// │ CapsL │ æ │ ʃ │ər │aɪ │ · │ ð │dʒ │ « │ » │ ː │ " │  ent │
// ├───────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴──────┤
// │  shift  │ ʒ │ɛər│ɪər│ju │ ⸰ │ ŋ │ u │ ‹ │ › │ ? │  shift │
// ├──────┬──┴──┬┴───┴─┬─┴───┴───┴───┴───┴───┴─┬─┴───┴┬───────┤
// │ ctrl │ win │ Lalt │         space         │ Ralt │  ctrl │
// └──────┴─────┴──────┴───────────────────────┴──────┴───────┘
// ```
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬────────┐
// │ ~ ≈ │ ! ₁ │ @ ₂ │ # ₃ │ $ ₄ │ % ₅ │ ^ ₆ │ & ₇ │ * ₈ │ ( ₉ │ ) ₀ │ _ ← │ + ± │   bksp │ 
// │ ` ´ │ 1 ¹ │ 2 ² │ 3 ³ │ 4 ⁴ │ 5 ⁵ │ 6 ⁶ │ 7 ⁷ │ 8 ⁸ │ 9 ⁹ │ 0 ⁰ │ - → │ = ≠ │        │ 
// ├─────┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬──────┤
// │ tab   │ 𐑬 ⌜ │ 𐑾 ⌝ │ 𐑱 ⌞ │ 𐑸 ⌟ │ 𐑔 θ │ 𐑷 ə │ 𐑫 ʊ │ 𐑰 ˈ │ 𐑴 ɔ │ 𐑹 π │ { ⟮ │ } ⟯ │ | ◦  │
// │       │ 𐑶 … │ 𐑢 ⋯ │ 𐑧 é │ 𐑮 ® │ 𐑑 ™ │ 𐑭 √ │ 𐑳 ↑ │ 𐑦 ɪ │ 𐑪 ɒ │ 𐑐 ℗ │ [ ⟨ │ ] ⟩ │ \ •  │
// ├───────┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴──────┤
// │ CapsL   │ 𐑨 ɑ │ 𐑖 ʃ │ 𐑼 ð │ 𐑲 ʍ │ · ʤ │ 𐑞 ‑ │ 𐑡 ʧ │ « ˌ │ » ɫ │ : ː │ " ☒ │   enter  │
// │         │ 𐑩 “ │ 𐑕 ” │ 𐑛 ↓ │ 𐑓 ° │ 𐑜 ɛ │ 𐑣 ‐ │ 𐑘 ɜ │ 𐑒 ≤ │ 𐑤 ≥ │ ; § │ ' × │          │
// ├─────────┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──────────┤
// │    shift   │ 𐑠 ʒ │ 𐑺 æ │ 𐑽 ¢ │ 𐑿 ʌ │ ⸰ ○ │ 𐑙 ŋ │ 𐑵 µ │ ‹ ☺ │ › ☐ │ ? ☑ │    shift    │
// │            │ 𐑟 ‘ │ 𐑻 ’ │ 𐑗 © │ 𐑝 ⁃ │ 𐑚 · │ 𐑯 – │ 𐑥 — │ , < │ . > │ / ÷ │             │
// ├───────┬────┴─┬───┴──┬──┴─────┴─────┴─────┴─────┴─────┴──┬──┴───┬─┴─────┼──────┬──────┤
// │       │      │      │ space            zero-width space │      │       │      │      │
// │ ctrl  │ win  │  alt │ space                    M-space  │ Ralt │       │      │ ctrl │
// └───────┴──────┴──────┴───────────────────────────────────┴──────┴───────┴──────┴──────┘
// ```
// --------------------
// Unused Unicode range U+FDD0-U+FDEF
// These code points will be translated by ~/.XCompose according to following table:
// UFDD0 = ɔɪ  // q U0254 U026A
// UFDD1 = aʊ  // Q U0061 U028A
// UFDD2 = ɪə  // W U026A U0259
// UFDD3 = eɪ  // E U0065 U026A
// UFDD4 = ɑːr // R U0251 U02D0 U0072
// UFDD5 = əʊ  // O U0259 U028A
// UFDD6 = ɔːr // P U0254 U0072
// UFDD7 = ər  // D U0259 U0072
// UFDD8 = aɪ  // F U0061 U026A
// UFDD9 = dʒ  // J U0064 U0292
// UFDDA = ɜːr // x U025C U02D0 U0072
// UFDDB = ɛər // X U025B U0259 U0072 
// UFDDC = tʃ  // c U0074 U0283
// UFDDD = ɪər // C U026A U0259 U0072
// UFDDE = ju  // V U006A U0075
// --------------------
// if you use a rare/never used keysym in the keymap definition, then a global Xmodmap to make THAT keysym output the various unicode characters you need, this'll work.
// In the keymap:
//     key <AB04>  { [ v, V, XF86LaunchA, XF86LaunchB ] };
// In a global Xmodmap: (perhaps loaded from /etc/profile.d ?)
//     keysym XF86LaunchA = U0056 U0331
//     keysym XF86LaunchB = U0076 U0331
//There are quite a few unused/special-use keysyms, I chose the LaunchA/B as an example.
//  XF86Launch[0,1,2..D,E,F]  - 16 total
// full list: /usr/include/X11/XF86keysym.h
// --------------------
// it is possible to use the Unicode code directly in xkb keyboard layout definition files in /usr/share/X11/xkb/symbols/ or to use with keysym using this format U#### or 0x100####.
//Example:
//	key <AD04> { [        r, R,           U200F,        U200E           ] };
//Or to define new keysym:
//	xmodmap -e "keysym RLM = U200F"
//For permanent keysym, add to ~/.xmodmap file:
//	keysym RLM = U200F
//References:
//	Custom xkb layout in which one key creates two Unicode code points
//	FOSS Localization/Annex B: Technical Aspects
//	Creating and Compiling Custom Keymaps for Linux
// --------------------


default partial alphanumeric_keys modifier_keys
xkb_symbols "phonem" {

//    include "us(basic)"
    name[Group1]= "English (Phonemic)";

    key <TLDE>	{[ grave,	asciitilde,	U00B4,		U2248	]}; // ` ~ ´ (acute accent)  ≈ (almost equal)
    key <AE01>	{[ 1,		exclam,		U00B9,		U2081	]}; // 1 ! ¹ (superscript 1) ₁ (subscript 1)
    key <AE02>	{[ 2,		at,		U00B2,		U2082	]}; // 2 @ ² (superscript 2) ₂ (subscript 2)
    key <AE03>	{[ 3,		numbersign,	U00b3,		U2083	]}; // 3 # ³ (superscript 3) ₃ (subscript 3)
    key <AE04>	{[ 4,		dollar,		U2074,		U2084	]}; // 4 $ ⁴ (superscript 4) ₄ (subscript 4)
    key <AE05>	{[ 5,		percent,	U2075,		U2085	]}; // 5 % ⁵ (superscript 5) ₅ (subscript 5)
    key <AE06>	{[ 6,		asciicircum,	U2076,		U2086	]}; // 6 ^ ⁶ (superscript 6) ₆ (subscript 6)
    key <AE07>	{[ 7,		ampersand,	U2077,		U2087	]}; // 7 & ⁷ (superscript 7) ₇ (subscript 7)
    key <AE08>	{[ 8,		asterisk,	U2078,		U2088	]}; // 8 * ⁸ (superscript 8) ₈ (subscript 8)
    key <AE09>	{[ 9,		parenleft,	U2079,		U2089	]}; // 9 ( ⁹ (superscript 9) ₉ (subscript 9)
    key <AE10>	{[ 0,		parenright,	U2070,		U2080	]}; // 0 ( ⁰ (superscript 0) ₀ (subscript 0)
    key <AE11>	{[ minus,	underscore,	U2192,		U2190	]}; // - _ → (right arrow)   ← (left arrow)
    key <AE12>	{[ equal,	plus,		U2260,		U00B1	]}; // = + ≠ (notequal to)   ± (plus minus)

    key <AD01> {[ UFDD0,	UFDD1,		U2026,		U231C	]}; //q: ɔɪ     aʊ     … (ellipsis) ⌜ (top-L corner)
    key <AD02> {[ w,		UFDD2,		U22EF,		U231D	]}; //w: w      ɪə     ⋯ (hor elli) ⌝ (top-R corner)
    key <AD03> {[ U025b,	UFDD3,		U0301,		U231E	]}; //e: ɛ      eɪ     é (acute ac) ⌞ (bot-L corner)
    key <AD04> {[ r,		UFDD4,		U00AE,		U231F	]}; //r: r      ɑr     · (registrd) ⌟ (bot-R corner)
    key <AD05> {[ t,		U03B8,		U2122,		U03B8	]}; //t: t      θ      ™ (trademak) θ (theta)
    key <AD06> {[ U0251,	U0254,		U221A,		U0259	]}; //y: ɑ      ɔ      √ (sq root)  ə (schwa)
    key <AD07> {[ U028C,	U028A,		U2191,		U028A	]}; //u: ʌ      ʊ      ↑ (up arrow) ʊ (upsilon)
    key <AD08> {[ U026A,	i,		U026A,		U02C8	]}; //i: ɪ      i      ɪ (small I)  ˈ (high stress)
    key <AD09> {[ U0252,	UFDD5,		U0252,		U0254	]}; //o: ɒ      əʊ     ɒ (tur alph) ɔ (open o)
    key <AD10> {[ p,		UFDD6,		U2117,		U03C0	]}; //p: p      ɔr     ℗ (sound co) π (pie)
    key <AD11> {[ bracketleft,	braceleft,	U27E8,		U27EE	]}; //   [      {      ⟨ (angle br) ⟮ (math flat paren)
    key <AD12> {[ bracketright,	braceright,	U27E9,		U27EF	]}; //   ]      }      ⟩ (angle br) ⟯ (math flat paren)
    key <BKSL> {[ backslash,	bar,		U2022,		U25E6	]}; //   \      |      • (bullet)   ◦ (white bullet)

    key <AC01>	{[ U0259,	U00E6,		U201C,		U0251	]}; //a: ə      æ      “ (L d quot)  ɑ (alpha)
    key <AC02>	{[ s,		U0283,		U201D,		U0283	]}; //s: s      ʃ      ” (R d quot)  ʃ (esh)
    key <AC03>	{[ d,		UFDD7,		U2193,		U00F0	]}; //d: d      ər     ↓ (down arr)  ð (eth)
    key <AC04>	{[ f,		UFDD8,		U00B0,		U028D	]}; //f: f      aɪ     ° (degree)    ʍ (turned w)
    key <AC05>	{[ g,		periodcentered,	U025B,		U02A4	]}; //g: g      ·(UB7) ɛ (open E)    ʤ (dezsh)
    key <AC06>	{[ h,		U00F0,		U2010,		U2011	]}; //h: h      ð      ‐ (hyphen)    ‑ (no-br hyphen)
    key <AC07>	{[ j,		UFDD9,		U025C,		U02A7	]}; //j: j      dʒ     ɜ (rev openE) ʧ (tesh)
    key <AC08>	{[ k,		guillemotleft,	U2264,		U02CC	]}; //k: k      «(Uab) ≤ (less or)   ˌ (low stress)
    key <AC09>	{[ l,		guillemotright,	U2265,		U026B	]}; //l: l      »(Ubb) ≥ (great or)  ɫ (dark L)
    key <AC10>	{[ semicolon,	colon,		U00A7,		U02D0	]}; //   ;      :      § (section)   ː (tri colon)
    key <AC11>	{[ apostrophe,	quotedbl,	U00D7,		U2612	]}; //   '      "      × (multipl)   ☒ (box with x) 

    key <AB01>	{[ z,		U0292,		U2018,		U0292	]}; //z: z      ʒ      ‘ (L sing quo)  ʒ (ezh)
    key <AB02>	{[ UFDDA,	UFDDB,		U2019,		U00E6	]}; //x: ɜːr    ɛər	   ’ (R sing quo)  æ (ash)
    key <AB03>	{[ UFDDC,	UFDDD,		U00A9,		U00A2	]}; //c: tʃ     ɪər        © (copyright)   ¢ (cent)
    key <AB04>	{[ v,		UFDDE,		U2043,		U028C	]}; //v: v      ju         ⁃ (hyphen bul)  ʌ (turn V)
    key <AB05>	{[ b,		U2E30,		U00B7,		U25CB	]}; //b: b      ⸰ (midcir) · (bullet)      ○ (wh circle)
    key <AB06>	{[ n,		U014B,		U2013,		U014B	]}; //n: n      ŋ          – (N-dash)      ŋ (engma)
    key <AB07>	{[ m,		u,		U2014,		U00B5	]}; //m: m      u          — (M-dash)      µ (micro)
    key <AB08>	{[ comma,	U2039,		less,		U263A	]}; //   ,      ‹ (s guil) < (less)        ☺ (smiley)
    key <AB09>	{[ period,	U203a,		greater,	U2610	]}; //   .      › (s guil) > (greater)     ☐ (ballot)
    key <AB10>	{[ slash,	question,	U00F7,		U2611	]}; //   /      ?          ÷ (division)    ☑ (w/ check)

    key <SPCE>	{[ space,	space,		emspace, U200B	]}; // U2003 M-space, U200B zero-width space

    replace key <CAPS> {
        type = "ALPHABETIC", symbols = [ Escape, Escape ],
        actions [Group1] = [ SetMods(modifiers=none), SetMods(modifiers=Lock,clearLocks) ]    };
    replace key <ESC> { [ Alt_L, Alt_L ] };
    include "shift(both_capslock_cancel)"
    include "level3(alt_switch)"

};

